{"version":3,"file":"static/js/799.bc2274d4.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/Section/Section.styled.js","components/Section/Section.jsx","pages/Login/Login.styled.js","pages/NewAccountPage/NewAccountPage.jsx","redux/selectors.js"],"sourcesContent":["import { styled } from 'styled-components';\n\nexport const FormStyled = styled.form`\n  display: flex;\n  width: 400px;\n  height: 300px;\n  justify-content: center;\n  align-items: center;\n  flex-wrap: wrap;\n  flex-direction: column;\n  margin-bottom: 15px;\n  margin-left: 50px;\n  outline: 1px solid #000000;\n  border-radius: 15px;\n  background: linear-gradient(\n    90deg,\n    rgba(134, 40, 80, 1) 0%,\n    rgba(200, 11, 32, 0.9724264705882353) 74%\n  );\n  -webkit-box-shadow: 0 30px 60px 0 rgba(0, 0, 0, 0.6);\n  box-shadow: 0 30px 60px 0 rgba(0, 0, 0, 0.6);\n`;\nexport const Label = styled.label`\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n  flex-wrap: wrap;\n  flex-direction: column;\n\n  margin: 7px 15px;\n  font-size: 22px;\n  font-weight: 600;\n`;\nexport const FormInputTitle = styled.p`\n  font-size: 22px;\n  color: beige;\n`;\nexport const Input = styled.input`\n  display: flex;\n  width: 280px;\n  height: 20px;\n  font-size: 20px;\n  font-weight: 500;\n  text-shadow: 1px 1px rgba(0, 0, 0, 0.2);\n  margin-bottom: 15px;\n  margin-top: 30px;\n  /* margin-left: 5px; */\n  padding: 7px;\n  margin-left: 1px;\n  background: rgba(0, 0, 0, 0.19);\n  border: 1px solid rgba(46, 45, 45, 0.3);\n  border-radius: 5px;\n  outline: none;\n`;\nexport const ButtonAddContact = styled.button`\n  font-size: 16px;\n  font-weight: 500;\n  text-shadow: 1px 1px rgba(0, 0, 0, 0.5);\n  width: 150px;\n  height: 35px;\n  text-align: center;\n  padding: 5px;\n  border: 1px solid #000;\n  border-radius: 4px;\n  background-color: rgb(190, 255, 233);\n  color: rgb(41, 18, 18);\n  margin-left: 15px;\n  margin-bottom: 5px;\n  &: hover {\n    background: rgba(223, 125, 125, 0.8);\n    color: white;\n  }\n`;\n","import { Wraper } from 'pages/Login/Login.styled';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addNewContact } from 'redux/contactsOperations';\nimport { selectContacts } from 'redux/selectors';\nimport {\n  ButtonAddContact,\n  FormInputTitle,\n  FormStyled,\n  Input,\n  Label,\n} from './ContactForm.styled';\nimport user from '../../images/user.png';\nimport phone from '../../images/phone.png';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const clearForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const handleFormInput = evt => {\n    const { name, value } = evt.target;\n\n    if (name === 'number' && !/^\\d+$/.test(value)) {\n      return;\n    }\n\n    if (name === 'name') {\n      setName(value);\n    } else if (name === 'number') {\n      setNumber(value);\n    }\n  };\n\n  const handleFormSubmit = evt => {\n    evt.preventDefault();\n\n    const formData = { name: name, number: number };\n    const haveAllreadyContact = contacts.find(\n      contact => contact.name === formData.name\n    );\n    if (haveAllreadyContact) {\n      return alert(`${formData.name} is already in contacts`);\n    }\n\n    dispatch(addNewContact(formData));\n    clearForm();\n  };\n\n  return (\n    <FormStyled onSubmit={handleFormSubmit}>\n      <Label>\n        <Wraper>\n          <img src={user} alt=\"email Img \" width=\"25\" />\n          <FormInputTitle>Name</FormInputTitle>\n        </Wraper>\n\n        <Input\n          onChange={handleFormInput}\n          value={name}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          placeholder=\"name\"\n        />\n      </Label>\n      <Label>\n        <Wraper>\n          <img src={phone} alt=\"email Img \" width=\"20\" />\n          <FormInputTitle>Number</FormInputTitle>\n        </Wraper>\n        <Input\n          onChange={handleFormInput}\n          value={number}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          placeholder=\"number\"\n        />\n      </Label>\n      <ButtonAddContact type=\"submit\">Add contact</ButtonAddContact>\n    </FormStyled>\n  );\n};\n","import { styled } from 'styled-components';\n\nexport const SectionStyle = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding-top: 5px;\n  justify-content: center;\n  align-items: center;\n  background: linear-gradient(\n    86deg,\n    rgba(134, 40, 80, 1) 0%,\n    rgba(113, 10, 52, 1) 22%,\n    rgba(112, 45, 51, 1) 63%,\n    rgba(133, 133, 133, 1) 100%\n  );\n`;\nexport const SectionTitle = styled.h2`\n  color: beige;\n  font-size: 24px;\n  font-weight: 600;\n  margin-bottom: 50px;\n`;\n","import { SectionStyle, SectionTitle } from './Section.styled';\n\nexport const Section = ({ title, children }) => {\n  return (\n    <SectionStyle>\n      <SectionTitle>{title}</SectionTitle>\n      {children}\n    </SectionStyle>\n  );\n};\n","import { styled } from 'styled-components';\n\nexport const LoginFormTitle = styled.h2`\n  color: beige;\n  font-size: 38px;\n  font-weight: 600;\n  margin-bottom: 40px;\n  margin-top: 5px;\n`;\nexport const LoginFormstyle = styled.form`\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  padding-top: 20px;\n  justify-content: center;\n  align-items: center;\n  color: beige;\n  font-size: 42px;\n  font-weight: 600;\n  margin-bottom: 50px;\n  margin-top: 25px;\n  width: 500px;\n  height: 300px;\n  border-radius: 20px;\n  background: linear-gradient(\n    90deg,\n    rgba(134, 40, 80, 1) 0%,\n    rgba(200, 11, 32, 0.9724264705882353) 74%\n  );\n  -webkit-box-shadow: 0 30px 60px 0 rgba(0, 0, 0, 0.6);\n  box-shadow: 0 30px 60px 0 rgba(0, 0, 0, 0.6);\n`;\nexport const Wraper = styled.div`\n  display: flex;\n  position: absolute;\n  transform: translateY(-40px);\n  gap: 7px;\n  justify-content: center;\n  align-items: center;\n`;\nexport const LoginInputTitle = styled.p`\n  font-size: 22px;\n`;\nexport const LoginInput = styled.input`\n  display: flex;\n  width: 280px;\n  height: 20px;\n  font-size: 20px;\n  font-weight: 500;\n  text-shadow: 1px 1px rgba(0, 0, 0, 0.2);\n  margin-bottom: 15px;\n  margin-top: 30px;\n  /* margin-left: 5px; */\n  padding: 7px;\n  margin-left: 1px;\n  background: rgba(0, 0, 0, 0.19);\n  border: 1px solid rgba(46, 45, 45, 0.3);\n  border-radius: 5px;\n  outline: none;\n`;\nexport const LoginLabel = styled.label`\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n  flex-wrap: wrap;\n  flex-direction: column;\n\n  margin: 7px 15px;\n  font-size: 22px;\n  font-weight: 600;\n`;\nexport const ButtonLogin = styled.button`\n  font-size: 18px;\n  font-weight: 700;\n  text-shadow: 1px 1px rgba(0, 0, 0, 0.5);\n  width: 150px;\n  height: 35px;\n  text-align: center;\n  padding: 5px;\n  border: 1px solid #000;\n  border-radius: 4px;\n  background-color: rgb(290, 255, 233);\n  color: rgb(41, 18, 18);\n  margin-left: 15px;\n  margin-bottom: 5px;\n  &: hover {\n    background: rgba(223, 125, 125, 0.8);\n    color: white;\n  }\n`;\n","const { ContactForm } = require('components/ContactForm/ContactForm');\nconst { Section } = require('components/Section/Section');\n\nconst NewAccountPage = () => {\n  return (\n    <Section>\n      <ContactForm />\n    </Section>\n  );\n};\n\nexport default NewAccountPage;\n","// import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.contacts.items;\n\nexport const selectFilter = state => state.contacts.filter;\n\nexport const selectLoading = state => state.contacts.contacts.isLoading;\n// export const selectFilteredContacts = createSelector(\n//   [selectContacts, selectFilter],\n//   (contacts, filter) => {\n//     return contacts.filter(contact =>\n//       contact.name.toLowerCase().includes(filter.toLowerCase())\n//     );\n//   }\n// );\n"],"names":["FormStyled","styled","_templateObject","_taggedTemplateLiteral","Label","_templateObject2","FormInputTitle","_templateObject3","Input","_templateObject4","ButtonAddContact","_templateObject5","ContactForm","dispatch","useDispatch","contacts","useSelector","selectContacts","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","number","setNumber","handleFormInput","evt","_evt$target","target","value","test","_jsxs","onSubmit","preventDefault","formData","find","contact","alert","concat","addNewContact","children","Wraper","_jsx","src","user","alt","width","onChange","type","pattern","title","required","placeholder","SectionStyle","SectionTitle","Section","_ref","LoginFormTitle","LoginFormstyle","LoginInputTitle","LoginInput","LoginLabel","_templateObject6","ButtonLogin","_templateObject7","require","state","items","selectFilter","filter","selectLoading","isLoading"],"sourceRoot":""}